# Auto detect text files and perform LF normalization
* text=auto
# import the libraries
import RPi.GPIO as GPIO
from time import sleep
GPIO.setmode(GPIO.BCM)
GPIO.setup(Button, GPIO.IN, pull_up_down=GPIO.PUD_UP) #Button input pin with pull-up resistor            
from RpiMotorLib import RpiMotorLib
buttonState=1
buttonStateOld=1



# Declare an named instance of class pass GPIO pins numbers
mymotortest = RpiMotorLib.A4988Nema(direction, step, GPIO_pins, "A4988")



#define GPIO pins
GPIO_pins = (25, 8, 7)    # Microstep Resolution MS1-MS3 -> GPIO Pin
direction= 24               # Direction Pin, 
step = 23                   # Step Pin
Button= 26



try:
      while True:
             buttonState=GPIO.input(Button)
             if buttonState==1 and buttonStateOld==0

mymotortest.motor_go(False, "Full" , 100, .01, False, .05), GPIO.input (Button)
    buttonStateOld=buttonState
    
    
    else:
        mymotortest.motor_go(True, "Full" , 100, .01, False, .05)
    sleep(1)




# good practice to cleanup GPIO at some point before exit
GPIO.cleanup()
